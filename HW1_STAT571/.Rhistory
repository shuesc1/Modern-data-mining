radio2$age[radio2$age == "Eighteen (18)"] <- "18"  # Change "Eighteen (18)" to 18
radio2$age[radio2$age == "27`"] <- "27"# Change "27`" to 27
summary(radio2)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
# radio2$education <- gsub('[\x89]', "\'", newradio$education)
# radio2$education <- gsub('[\']', "", newradio$education)
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree) || (newradio$education == "Some college, no diploma; or Associate‰Ûªs degree")) <-  "Some college, no diploma; or Associates degree"]
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree"))] <-  "Some college, no diploma; or Associates degree"
radio2$education[radio2$education == "Some college, no diploma; or Associate\x89۪s degree"] <-  "Some college, no diploma; or Associates degree"
## age: non-numeric (female, Eighteen (18)), mistyped (27`), and impossible (223) values present
radio2 <- radio2[-c(which(radio2$age == "female")),] # Remove row with "female" entry under age
radio2 <- radio2[-c(which(radio2$age == "223")),] # Remove row with impossible age value (no way of knowing if it should be 22 or 23)
radio2$age[radio2$age == "Eighteen (18)"] <- "18"  # Change "Eighteen (18)" to 18
radio2$age[radio2$age == "27`"] <- "27"# Change "27`" to 27
summary(radio2)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
radio <- read.csv("Survey_results_final.csv", header=T)
#base R
radio2 <- data.frame(radio$Answer.Age, radio$Answer.Gender, radio$Answer.Education, radio$Answer.HouseHoldIncome, radio$Answer.Sirius.Radio, radio$Answer.Wharton.Radio, radio$WorkTimeInSeconds)
#dplyr
radio3 <- radio %>% select(28, 30, 29, 31, 32, 33, 24)
names(radio)
#base R
names(radio2)[1:7] <- c("age", "gender", "education", "income", "sirius", "wharton", "worktime")
names(radio2)
#dplyr
radio3 <- radio3 %>% rename(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome, sirius = Answer.Sirius.Radio, wharton = Answer.Wharton.Radio, worktime = WorkTimeInSeconds)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
# radio2$education <- gsub('[\x89]', "\'", newradio$education)
# radio2$education <- gsub('[\']', "", newradio$education)
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree) || (newradio$education == "Some college, no diploma; or Associate‰Ûªs degree")) <-  "Some college, no diploma; or Associates degree"]
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree"))] <-  "Some college, no diploma; or Associates degree"
radio2$education[radio2$education == "Some college, no diploma; or Associate‰Ûªs degree"] <-  "Some college, no diploma; or Associates degree"
## age: non-numeric (female, Eighteen (18)), mistyped (27`), and impossible (223) values present
radio2 <- radio2[-c(which(radio2$age == "female")),] # Remove row with "female" entry under age
radio2 <- radio2[-c(which(radio2$age == "223")),] # Remove row with impossible age value (no way of knowing if it should be 22 or 23)
radio2$age[radio2$age == "Eighteen (18)"] <- "18"  # Change "Eighteen (18)" to 18
radio2$age[radio2$age == "27`"] <- "27"# Change "27`" to 27
summary(radio2)
radio <- read.csv("Survey_results_final.csv", header=T)
#base R
radio2 <- data.frame(radio$Answer.Age, radio$Answer.Gender, radio$Answer.Education, radio$Answer.HouseHoldIncome, radio$Answer.Sirius.Radio, radio$Answer.Wharton.Radio, radio$WorkTimeInSeconds)
#dplyr
radio3 <- radio %>% select(28, 30, 29, 31, 32, 33, 24)
names(radio)
#base R
names(radio2)[1:7] <- c("age", "gender", "education", "income", "sirius", "wharton", "worktime")
names(radio2)
#dplyr
radio3 <- radio3 %>% rename(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome, sirius = Answer.Sirius.Radio, wharton = Answer.Wharton.Radio, worktime = WorkTimeInSeconds)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
radio2$education <- gsub('[/[‰Ûª]/g]', "\'", newradio$education)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
radio2$education <- gsub('[/[‰Ûª]/g]', "", newradio$education)
radio <- read.csv("Survey_results_final.csv", header=T)
#base R
radio2 <- data.frame(radio$Answer.Age, radio$Answer.Gender, radio$Answer.Education, radio$Answer.HouseHoldIncome, radio$Answer.Sirius.Radio, radio$Answer.Wharton.Radio, radio$WorkTimeInSeconds)
#dplyr
radio3 <- radio %>% select(28, 30, 29, 31, 32, 33, 24)
names(radio)
#base R
names(radio2)[1:7] <- c("age", "gender", "education", "income", "sirius", "wharton", "worktime")
names(radio2)
#dplyr
radio3 <- radio3 %>% rename(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome, sirius = Answer.Sirius.Radio, wharton = Answer.Wharton.Radio, worktime = WorkTimeInSeconds)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
radio2$education <- gsub('[/[‰Ûª]/g]', "", newradio$education)
summary(radio2)
#numeric.age <- as.numeric(radio2$age)
#hist(numeric.age, breaks=5)
#numeric.worktime <- as.numeric(radio2$worktime)
#hist(numeric.worktime)
ggplot(data=radio2, aes(age)) + geom_bar()
ggplot(data=radio2, aes(income)) + geom_bar()
ggplot(data=radio2, aes(education)) + geom_bar()
ggplot(data=radio2, aes(gender)) + geom_bar()
ggplot(data=radio2, aes(sirius)) + geom_bar()
ggplot(data=radio2, aes(wharton)) + geom_bar()
ggplot(radio2, aes(x=factor(cyl)))+
geom_bar(stat="bin", width=0.7, fill="steelblue")+
theme_minimal()
# Ratio of Wharton listeners to Sirius Listeners
Sum.listeners <- apply(radio2=="Yes",
MARGIN = 2,
FUN = sum)
Sum.listeners
p <- Sum.listeners[6]/Sum.listeners[5]
# 5.16% of sirius listeners listen to the Wharton program.
# Audience Estimate
p * 51.6 #multiply by population of Sirius audiences
# Output: 2.66. We estimate 2.66 million Wharton listeners.
x <- seq(0, 1, length = 40)
x
set.seed(1)
y <- 1 + 1.2 * x + rnorm(40, sd = 2)
simdata <- data.frame(x,y)
# Plot data
ggplot(simdata) +
geom_point(aes(x = x, y = y), color = "blue") +
labs(title = "Relationship between x and y", x = "x", y = "y")
lm.out <- lm(y ~ x, data = simdata)
coefficients(lm.out)
ggplot(simdata, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method="lm", se = F,color = "red")
confint(lm.out)
summary(lm.out)$sigma # 1.7943. It is close to sigma = 2. RSE will decrease as we increase n.
summary(lm.out)
RSS <- sum((lm.out$res)^2)
RSS
sqrt(RSS/lm.out$df)
x <- seq(0, 1, length = 40)
n_sim <- 100
b1 <- numeric(n_sim)   # nsim many LS estimates of beta1 (=1.2)
upper_ci <- numeric(n_sim)  # lower bound
lower_ci <- numeric(n_sim)  # upper bound
t_star <- qt(0.975, 38)
# Carry out the simulation
for (i in 1:n_sim){
y <- 1 + 1.2 * x + rnorm(40, sd = 2)
lse <- lm(y ~ x)
lse_out <- summary(lse)$coefficients
se <- lse_out[2, 2]
b1[i] <- lse_out[2, 1]
upper_ci[i] <- b1[i] + t_star * se
lower_ci[i] <- b1[i] - t_star * se
}
results <- cbind(se, b1, upper_ci, lower_ci)
#rm(se, b1, upper_ci, lower_ci, x, n_sim, b1, t_star, lse, lse_out)
summary(b1)
sd(b1)
upperci <- 0.9948+1.96*sd(b1)  # upper CI of b1
lowerci <- 0.9948-1.96*sd(b1) # lower CI of b1
upperci
lowerci
# Our estimation of beta_1 above was 0.9064. In this simulation, the mean of b1 is 0.9948 with standard deviation of 1.09. The 95% confidence interval given this is [-1.14, 3.13]. Since the true beta (1.2) llies within this interval, the sampling distribution agrees our theory.
#_____
#b1.summary <- summary(b1) #Save the whole summary names
#names(b1.summary)
#hist(b1)
```{r}
#```{r}
n_true_beta1 <-  0
numeric.upper_ci <- as.numeric(results[,3])
numeric.lower_ci <- as.numeric(results[,4])
for (i in 1:100) {
if (numeric.upper_ci[i] >= 1.2 & numeric.lower_ci[i] <= 1.2) {
n_true_beta1 <- n_true_beta1 + 1}
}
n_true_beta1
#Our 95% CI’s include the true beta_1 94/100 times.
# check if you have ISLR package, if not, install it
if(!requireNamespace('ISLR')) install.packages('ISLR')
auto_data <- ISLR::Auto
summary(auto_data)
pairs(~mpg+cylinders+weight+horsepower+acceleration+displacement,data=auto_data,
main="Scatterplot Matrix")
pairs(~mpg+origin+year+origin,data=auto_data,
main="Scatterplot Matrix")
# The data set consists of 392 vehicles with 9 columns of variables/details about the vehicles.
# At first glance, it appears that cylinders, weight, horsepower, displacement and acceleration have an inverse relationship with mpg whereas origin and year seems to have a direct relationship with mpg (change in same direction). Cylinders and origin should be examined as categorical values whereas the others are continuous.
lm1 <- lm(mpg ~ year, data = auto_data)
summary(lm1)
# Year is a significant variable at the 0.05 level as p is extremely small at  <2e-16.
# According to the model, when year increases by 1, mpg, on average, increases by 1.23.
lm2 <- lm(mpg ~ year+horsepower, data = auto_data)
summary(lm2)
# Year continues to be a significant variable.
# If horsepower is fixed, for each 1 year increase in model year, mpg, on average, increases by 0.66.
confint(lm1)
confint(lm2)
# In statistician terms, the confidence interval for year narrows in ii because adding horsepower reduces residual standard error. Since the confidence interval calculation depends on this, the overall interval tightens with a decrease of RSE. In layman terms, with the introduction of horsepower, more of the MPG's behavior is explained by horsepower and year. This means the fitted model has less variability and provides can offer a more precise range in estimating the true MPG mean.
lm.interaction <- lm(mpg ~ year * horsepower, data = auto_data)
summary(lm.interaction)
# Test to see if interaction is significant
anova(lm2, lm.interaction)
# Since p value is  < 2.2e-16, this interaction is significant at the 0.05 level.
# Check for the effect of year.
Anova(lm2)
# Since p-value is very small at < 2.2e-16, we reject H0 at α=0.05. i.e., controlling horsepower, we have evidence to say the effect of Year is different (non-zero).
lm.cylinders <- lm(mpg ~ horsepower + cylinders, data = auto_data)
summary(lm.cylinders)
# Cylinders is significant at the 0.01 level.
# The model suggests that when horsepower is fixed, for every 1 unit increase in cylinders, mpg, on average, decreases by 1.91982.
lm.cylinders2 <- lm(mpg ~ horsepower + as.factor(cylinders), data = auto_data)
summary(lm.cylinders2)
anova(lm.cylinders, lm.cylinders2)
Anova(lm.cylinders2)
# The anova test shows that we can reject the null hypothesis H0: Beta of using cylinders as factors and Beta of using cylinders as numeric is the same.
# The Anova test shows that cylinders as a factor is a significant variable.
# Effect: Keeping horsepower constant, a vehicle with 4 cylinders would have a 6.57344 mpg more than a 3 cylinder vehicle.
# anova() calculates type I tests, that is, each variable is added in sequential order. Type 1 test particularly effective in testing effects of interactions. Anova() calculates type II or III tests. Type II tests test each variable after all the others, which is effective in testing for the main effects when there is no interaction term.
# Create subset (remove name column)
#auto_data2 <- select(auto_data, -name)
#names(auto_data2)
model1 <- lm(mpg ~ horsepower + as.factor(cylinders) + displacement + weight + acceleration + year + as.factor(origin), data = auto_data)
summary(model1)
model2 <- lm(mpg ~ horsepower + as.factor(cylinders) + displacement + weight + year + as.factor(origin), data = auto_data)
summary(model2)
model3 <- lm(mpg ~ horsepower + as.factor(cylinders) + weight + year + as.factor(origin), data = auto_data)
summary(model3)
# Model 3 and 2 have similar RSE but Model 3 has one less variable = SIMPLIER = WINNER CHICKEN DINNER! Everything varaible is significant in model 3 at alpha = 0.05.
# Test model
library(leaps)
fit.t1 <- regsubsets(mpg~., auto_data2, method="exh")
# Final model:
summary(model3)
# The final model uses varaibles horsepower, cyclinders (as factor), weight, year, and origin (as factor). It has a RSE of 3.117 and R-squared of 0.8442.
# Diagnostic plots
layout(matrix(c(1,2,3,4),2,2))
plot(model3)
# Linearity, homoscedacity, and normality assumptions checked and verified -> valid model.
bs <- coefficients(model3)
prediction <- bs[1]+bs[2]*260+ bs[6]*1 + bs[7]*4000 + bs[8]*83
prediction
RSE <- 3.117
predict.upper <- prediction + 2*RSE
predict.lower <- prediction - 2*RSE
predict.upper
predict.lower
# The model predicts this car to have mpg of 19.53.
# The prediction interval is [13.298, 25.7767]
#newcar <-  auto_data2[1, ]  # Create a new row with same structure as in data1
#newcar[1] <- "NA" # Assign features for the new car
#newcar[2:8] <- c(8, 350, 260, 4000, "NA", 83, 1)
#newcar["name"] <-  "NA"
#newcar
#predict(model3, newcar, interval = "confidence", se.fit = TRUE)
#predict(model3, newcar,  interval = "predict", se.fit = TRUE)
#CIpred <- predict(model3, new, interval="prediction", se.fit=TRUE)
#CIpred
simulate_lm <- function(n) {
# note: `n` is an input but not used (don't worry about this hack)
x <- seq(0, 1, length = 40)
y <- 1 + 1.2 * x + rnorm(40, sd = 2)
t_star <- qt(0.975, 38)
lse <- lm(y ~ x)
lse_out <- summary(lse)$coefficients
se <- lse_out[2, 2]
b1 <- lse_out[2, 1]
upper_CI = b1 + t_star * se
lower_CI = b1 - t_star * se
return(data.frame(se, b1, upper_CI, lower_CI))
}
# this step runs the simulation 100 times,
# then matrix transposes the result so rows are observations
sim_results <- data.frame(t(sapply(X = 1:100, FUN = simulate_lm)))
sim_results
radio <- read.csv("Survey_results_final.csv", header=T)
#base R
radio2 <- data.frame(radio$Answer.Age, radio$Answer.Gender, radio$Answer.Education, radio$Answer.HouseHoldIncome, radio$Answer.Sirius.Radio, radio$Answer.Wharton.Radio, radio$WorkTimeInSeconds)
#dplyr
radio3 <- radio %>% select(28, 30, 29, 31, 32, 33, 24)
names(radio)
#base R
names(radio2)[1:7] <- c("age", "gender", "education", "income", "sirius", "wharton", "worktime")
names(radio2)
#dplyr
radio3 <- radio3 %>% rename(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome, sirius = Answer.Sirius.Radio, wharton = Answer.Wharton.Radio, worktime = WorkTimeInSeconds)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
radio2$education <- gsub('[/[‰Ûª]/g]', "", radio2$education)
# radio2$education <- gsub('[\']', "", radio2$education)
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree) || (radio2$education == "Some college, no diploma; or Associate‰Ûªs degree")) <-  "Some college, no diploma; or Associates degree"]
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree"))] <-  "Some college, no diploma; or Associates degree"
# radio2$education[radio2$education == "Some college, no diploma; or Associate‰Ûªs degree"] <-  "Some college, no diploma; or Associates degree"
## age: non-numeric (female, Eighteen (18)), mistyped (27`), and impossible (223) values present
radio2 <- radio2[-c(which(radio2$age == "female")),] # Remove row with "female" entry under age
radio2 <- radio2[-c(which(radio2$age == "223")),] # Remove row with impossible age value (no way of knowing if it should be 22 or 23)
radio2$age[radio2$age == "Eighteen (18)"] <- "18"  # Change "Eighteen (18)" to 18
radio2$age[radio2$age == "27`"] <- "27"# Change "27`" to 27
summary(radio2)
radio <- read.csv("Survey_results_final.csv", header=T)
#base R
radio2 <- data.frame(radio$Answer.Age, radio$Answer.Gender, radio$Answer.Education, radio$Answer.HouseHoldIncome, radio$Answer.Sirius.Radio, radio$Answer.Wharton.Radio, radio$WorkTimeInSeconds)
#dplyr
radio3 <- radio %>% select(28, 30, 29, 31, 32, 33, 24)
names(radio)
#base R
names(radio2)[1:7] <- c("age", "gender", "education", "income", "sirius", "wharton", "worktime")
names(radio2)
#dplyr
radio3 <- radio3 %>% rename(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome, sirius = Answer.Sirius.Radio, wharton = Answer.Wharton.Radio, worktime = WorkTimeInSeconds)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
# radio2$education <- gsub('[/[‰Ûª]/g]', "", radio2$education)
radio2$education <- gsub('[\']', "", radio2$education)
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree) || (radio2$education == "Some college, no diploma; or Associate‰Ûªs degree")) <-  "Some college, no diploma; or Associates degree"]
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree"))] <-  "Some college, no diploma; or Associates degree"
# radio2$education[radio2$education == "Some college, no diploma; or Associate‰Ûªs degree"] <-  "Some college, no diploma; or Associates degree"
## age: non-numeric (female, Eighteen (18)), mistyped (27`), and impossible (223) values present
radio2 <- radio2[-c(which(radio2$age == "female")),] # Remove row with "female" entry under age
radio2 <- radio2[-c(which(radio2$age == "223")),] # Remove row with impossible age value (no way of knowing if it should be 22 or 23)
radio2$age[radio2$age == "Eighteen (18)"] <- "18"  # Change "Eighteen (18)" to 18
radio2$age[radio2$age == "27`"] <- "27"# Change "27`" to 27
summary(radio2)
#base R
radio2 <- data.frame(radio$Answer.Age, radio$Answer.Gender, radio$Answer.Education, radio$Answer.HouseHoldIncome, radio$Answer.Sirius.Radio, radio$Answer.Wharton.Radio, radio$WorkTimeInSeconds)
#dplyr
radio3 <- radio %>% select(28, 30, 29, 31, 32, 33, 24)
names(radio)
#base R
names(radio2)[1:7] <- c("age", "gender", "education", "income", "sirius", "wharton", "worktime")
names(radio2)
#dplyr
radio3 <- radio3 %>% rename(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome, sirius = Answer.Sirius.Radio, wharton = Answer.Wharton.Radio, worktime = WorkTimeInSeconds)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
# radio2$education <- gsub('[/[‰Ûª]/g]', "", radio2$education)
# radio2$education <- gsub('[\']', "", radio2$education)
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree) || (radio2$education == "Some college, no diploma; or Associate‰Ûªs degree")) <-  "Some college, no diploma; or Associates degree"]
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree"))] <-  "Some college, no diploma; or Associates degree"
# radio2$education[radio2$education == "Some college, no diploma; or Associate‰Ûªs degree"] <-  "Some college, no diploma; or Associates degree"
## age: non-numeric (female, Eighteen (18)), mistyped (27`), and impossible (223) values present
radio2 <- radio2[-c(which(radio2$age == "female")),] # Remove row with "female" entry under age
radio2 <- radio2[-c(which(radio2$age == "223")),] # Remove row with impossible age value (no way of knowing if it should be 22 or 23)
radio2$age[radio2$age == "Eighteen (18)"] <- "18"  # Change "Eighteen (18)" to 18
radio2$age[radio2$age == "27`"] <- "27"# Change "27`" to 27
summary(radio2)
#base R
radio2 <- data.frame(radio$Answer.Age, radio$Answer.Gender, radio$Answer.Education, radio$Answer.HouseHoldIncome, radio$Answer.Sirius.Radio, radio$Answer.Wharton.Radio, radio$WorkTimeInSeconds)
#dplyr
radio3 <- radio %>% select(28, 30, 29, 31, 32, 33, 24)
names(radio)
#base R
names(radio2)[1:7] <- c("age", "gender", "education", "income", "sirius", "wharton", "worktime")
names(radio2)
#dplyr
radio3 <- radio3 %>% rename(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome, sirius = Answer.Sirius.Radio, wharton = Answer.Wharton.Radio, worktime = WorkTimeInSeconds)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
# radio2$education <- gsub('[/[‰Ûª]/g]', "", radio2$education)
radio2$education <- gsub('[Bachelor\x89۪s]', "Bachelors", radio2$education)
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree) || (radio2$education == "Some college, no diploma; or Associate‰Ûªs degree")) <-  "Some college, no diploma; or Associates degree"]
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree"))] <-  "Some college, no diploma; or Associates degree"
# radio2$education[radio2$education == "Some college, no diploma; or Associate‰Ûªs degree"] <-  "Some college, no diploma; or Associates degree"
## age: non-numeric (female, Eighteen (18)), mistyped (27`), and impossible (223) values present
radio2 <- radio2[-c(which(radio2$age == "female")),] # Remove row with "female" entry under age
radio2 <- radio2[-c(which(radio2$age == "223")),] # Remove row with impossible age value (no way of knowing if it should be 22 or 23)
radio2$age[radio2$age == "Eighteen (18)"] <- "18"  # Change "Eighteen (18)" to 18
radio2$age[radio2$age == "27`"] <- "27"# Change "27`" to 27
summary(radio2)
summary(radio2)
#numeric.age <- as.numeric(radio2$age)
#hist(numeric.age, breaks=5)
#numeric.worktime <- as.numeric(radio2$worktime)
#hist(numeric.worktime)
ggplot(data=radio2, aes(age)) + geom_bar()
ggplot(data=radio2, aes(income)) + geom_bar()
ggplot(data=radio2, aes(education)) + geom_bar()
ggplot(data=radio2, aes(gender)) + geom_bar()
ggplot(data=radio2, aes(sirius)) + geom_bar()
ggplot(data=radio2, aes(wharton)) + geom_bar()
ggplot(radio2, aes(x=factor(cyl)))+
geom_bar(stat="bin", width=0.7, fill="steelblue")+
theme_minimal()
summary(radio2)
#numeric.age <- as.numeric(radio2$age)
#hist(numeric.age, breaks=5)
#numeric.worktime <- as.numeric(radio2$worktime)
#hist(numeric.worktime)
ggplot(data=radio2, aes(age)) + geom_bar()
ggplot(data=radio2, aes(income)) + geom_bar()
ggplot(data=radio2, aes(education)) + geom_bar()
ggplot(data=radio2, aes(gender)) + geom_bar()
ggplot(data=radio2, aes(sirius)) + geom_bar()
ggplot(data=radio2, aes(wharton)) + geom_bar()
ggplot(radio2, aes(x=factor(radio2)))+
geom_bar(stat="bin", width=0.7, fill="steelblue")+
theme_minimal()
radio <- read.csv("Survey_results_final.csv", encoding="UTF-8", header=T)
#base R
radio2 <- data.frame(radio$Answer.Age, radio$Answer.Gender, radio$Answer.Education, radio$Answer.HouseHoldIncome, radio$Answer.Sirius.Radio, radio$Answer.Wharton.Radio, radio$WorkTimeInSeconds)
#dplyr
radio3 <- radio %>% select(28, 30, 29, 31, 32, 33, 24)
names(radio)
#base R
names(radio2)[1:7] <- c("age", "gender", "education", "income", "sirius", "wharton", "worktime")
names(radio2)
#dplyr
radio3 <- radio3 %>% rename(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome, sirius = Answer.Sirius.Radio, wharton = Answer.Wharton.Radio, worktime = WorkTimeInSeconds)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
# radio2$education <- gsub('[/[‰Ûª]/g]', "", radio2$education)
# radio2$education <- gsub('[Bachelor\x89۪s]', "Bachelors", radio2$education)
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree) || (radio2$education == "Some college, no diploma; or Associate‰Ûªs degree")) <-  "Some college, no diploma; or Associates degree"]
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree"))] <-  "Some college, no diploma; or Associates degree"
# radio2$education[radio2$education == "Some college, no diploma; or Associate‰Ûªs degree"] <-  "Some college, no diploma; or Associates degree"
## age: non-numeric (female, Eighteen (18)), mistyped (27`), and impossible (223) values present
radio2 <- radio2[-c(which(radio2$age == "female")),] # Remove row with "female" entry under age
radio2 <- radio2[-c(which(radio2$age == "223")),] # Remove row with impossible age value (no way of knowing if it should be 22 or 23)
radio2$age[radio2$age == "Eighteen (18)"] <- "18"  # Change "Eighteen (18)" to 18
radio2$age[radio2$age == "27`"] <- "27"# Change "27`" to 27
summary(radio2)
radio <- read.csv("Survey_results_final.csv", header=T, quote="\')
radio <- read.csv("Survey_results_final.csv", header=T, quote="\'")
radio <- read.csv("Survey_results_final.csv", header=T, quote="\"")
#base R
radio2 <- data.frame(radio$Answer.Age, radio$Answer.Gender, radio$Answer.Education, radio$Answer.HouseHoldIncome, radio$Answer.Sirius.Radio, radio$Answer.Wharton.Radio, radio$WorkTimeInSeconds)
#dplyr
radio3 <- radio %>% select(28, 30, 29, 31, 32, 33, 24)
names(radio)
#base R
names(radio2)[1:7] <- c("age", "gender", "education", "income", "sirius", "wharton", "worktime")
names(radio2)
#dplyr
radio3 <- radio3 %>% rename(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome, sirius = Answer.Sirius.Radio, wharton = Answer.Wharton.Radio, worktime = WorkTimeInSeconds)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
# radio2$education <- gsub('[/[‰Ûª]/g]', "", radio2$education)
# radio2$education <- gsub('[Bachelor\x89۪s]', "Bachelors", radio2$education)
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree) || (radio2$education == "Some college, no diploma; or Associate‰Ûªs degree")) <-  "Some college, no diploma; or Associates degree"]
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree"))] <-  "Some college, no diploma; or Associates degree"
# radio2$education[radio2$education == "Some college, no diploma; or Associate‰Ûªs degree"] <-  "Some college, no diploma; or Associates degree"
## age: non-numeric (female, Eighteen (18)), mistyped (27`), and impossible (223) values present
radio2 <- radio2[-c(which(radio2$age == "female")),] # Remove row with "female" entry under age
radio2 <- radio2[-c(which(radio2$age == "223")),] # Remove row with impossible age value (no way of knowing if it should be 22 or 23)
radio2$age[radio2$age == "Eighteen (18)"] <- "18"  # Change "Eighteen (18)" to 18
radio2$age[radio2$age == "27`"] <- "27"# Change "27`" to 27
summary(radio2)
radio <- read.csv("Survey_results_final.csv", header=T, quote="")
radio <- read.csv("Survey_results_final.csv", header=T, quote="'")
radio <- read.csv("Survey_results_final.csv", header=T)
#base R
radio2 <- data.frame(radio$Answer.Age, radio$Answer.Gender, radio$Answer.Education, radio$Answer.HouseHoldIncome, radio$Answer.Sirius.Radio, radio$Answer.Wharton.Radio, radio$WorkTimeInSeconds)
#dplyr
radio3 <- radio %>% select(28, 30, 29, 31, 32, 33, 24)
names(radio)
#base R
names(radio2)[1:7] <- c("age", "gender", "education", "income", "sirius", "wharton", "worktime")
names(radio2)
#dplyr
radio3 <- radio3 %>% rename(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome, sirius = Answer.Sirius.Radio, wharton = Answer.Wharton.Radio, worktime = WorkTimeInSeconds)
# Make all empty entries uniform by assigning them the value 'NA'
radio2[radio2==""] <- NA
# Then remove all rows with an ;'NA' entry
radio2 <- na.omit(radio2)
# =====Fix input errors and typos.========
# education: categorical value not chosen, ASCII/Unicode translation error ("string literal "'" not rendered correctly)
radio2 <- radio2[-c(which(radio2$education == "select one")),] # Remove "select one" entries from education
# radio2$education <- gsub('[/[‰Ûª]/g]', "", radio2$education)
# radio2$education <- gsub('[Bachelor\x89۪s]', "Bachelors", radio2$education)
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree) || (radio2$education == "Some college, no diploma; or Associate‰Ûªs degree")) <-  "Some college, no diploma; or Associates degree"]
# radio2$education[c(which(radio2$education == "Some college, no diploma; or Associate\x89۪s degree"))] <-  "Some college, no diploma; or Associates degree"
# radio2$education[radio2$education == "Some college, no diploma; or Associate‰Ûªs degree"] <-  "Some college, no diploma; or Associates degree"
## age: non-numeric (female, Eighteen (18)), mistyped (27`), and impossible (223) values present
radio2 <- radio2[-c(which(radio2$age == "female")),] # Remove row with "female" entry under age
radio2 <- radio2[-c(which(radio2$age == "223")),] # Remove row with impossible age value (no way of knowing if it should be 22 or 23)
radio2$age[radio2$age == "Eighteen (18)"] <- "18"  # Change "Eighteen (18)" to 18
radio2$age[radio2$age == "27`"] <- "27"# Change "27`" to 27
summary(radio2)
