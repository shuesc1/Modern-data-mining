knitr::opts_chunk$set(echo = TRUE, results = "hide")
if(!require('pacman')) {
install.packages('pacman')
}
pacman::p_load(ISLR, leaps, car, tidyverse, GGally, reshape2)
help(Hitters)
dim(Hitters)
names(Hitters)
str(Hitters)  #summary(Hitters) a good way to check abnormality
sum(is.na(Hitters))
sapply(Hitters, function(x) any(is.na(x))) # any(is.na(var)) is very useful, it returns T/F for each var!
apply(Hitters, 2, function(x) any(is.na(x)))  # apply function by columns: column-wise missing
apply(Hitters, 1, function(x) any(is.na(x)))  # apply function by rows: row-wise missing
sum(is.na(Hitters$Salary))
# hist(Hitters$Salary, breaks = 40, col = "blue", main = "Histogram of Salary", ylab = "Frequency")  # Base R command for histogram
ggplot(Hitters, aes(x = Salary)) +
geom_histogram(binwidth = 40) +
ggtitle("Histogram of Salary") +
ylab("Frequency")
rownames(Hitters)[is.na(Hitters$Salary)]
data.comp <- na.omit(Hitters)
dim(data.comp)
data.comp %>%
select_if(is.numeric) %>%
ggpairs()
name.num <- sapply(data.comp, is.numeric)
data.comp %>%
select_if(is.numeric) %>%
select(Salary, AtBat, Hits, HmRun, Runs, RBI) %>%
pairs()  # base pair-wise scatter plots
#ggpairs()
cor(data.comp[name.num])  # pairwise cor's among all quantitative var's
data.comp %>%
select_if(is.numeric) %>%
qplot(x = Var1,
y = Var2,
data = melt(cor(
data.comp %>%
select_if(is.numeric))),
fill = value,
geom = "tile") +
xlab("") +
ylab("") +
guides(fill = guide_legend(title = "Correlation")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# pick the numeric columns
data.comp.numeric <- data.comp %>% select_if(is.numeric)
# correlation table
corr.table <- melt(cor(data.comp.numeric)) %>% mutate(value = abs(value))
# reorder the columns by the abs corr with Salary
corr.table.salary <- corr.table %>% filter(Var2 == "Salary")
col.order <- order(corr.table.salary$value)
data.comp.numeric.2 <- data.comp.numeric[, col.order]
# ordered correlation table
corr.table <- melt(cor(data.comp.numeric.2)) %>% mutate(value = abs(value))
ggplot(corr.table, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=value)) +
scale_x_discrete(limits = rev(levels(corr.table$Var1))) +
theme(axis.text.x = element_text(angle = 25, hjust = 1))
data.comp %>%
select_if(is.numeric) %>%
select(Salary, CHmRun, Hits) %>%
ggpairs()
