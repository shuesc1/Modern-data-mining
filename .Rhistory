17 + 3
1 * 2 * 3 * 4 * 5 *
6 * 7 * 8 * 9 * 10
history()
c(0,1,1,2,3,5,8)
1:50
install.packages("MASS")
library("MASS")
help(package = "MASS")
vignette(package = "dplyr")
detach("package:MASS",unload=TRUE)
getwd
getwe()
getwd()
getwd()
d <- "/Users/josephhaymaker/Modern-data-mining"
d
setwd(d)
getwd()
radio <- read.csv("Survey_results_final.csv", header = TRUE, stringsAsFactors = F)
ff <- "https://cdn.rawgit.com/Keno/8573181/raw/7e97f56f521d1f49b966e04457687e87da1b062b/gistfile1.txt"
ff_example <- read.csv(curl::curl(ff), stringsAsFactors = F)
install.packages("curl")
ff_example <- read.csv(curl::curl(ff), stringsAsFactors = F)
head(ff_example, 10)
class(radio)
str(radio)
head(radio)
tail(radio)
ncol(radio)
names(radio)[1] <- "hit_id"
names(radio)[1:10]
tips <- read.csv("tips.txt", stringsAsFactors = T)
str(tips)
dim(tips)
head(tips)
head(tips, 10)
tail(tips, 10)
names(tips)
summary(tips)
tips$percent <- 100*tips$tip/tips$total_bill # create a new variable
str(tips)
plot(tips$total_bill,tips$percent)
plot(tips$total_bill,tips$percent,
main= "Total bill v. percent tip",
ylab = "Percent",
xlab = "Total bill",
pch = 16,
col = "red",
lwd = 2,
xlim = c(0,60),
ylim = c(0,50))
model <- lm(percent ~ total_bill -1, data = tips)
model
summary(model)
plot(tips$total_bill, tips$percent,
main = "Total Bill v. Percent Tip", # give plot a title
xlab = "Percent",    # label the x-axis
ylab = "Total Bill", # label the y-axis
pch = 16,            # change the type of plot point
col = "red",         # set the color of plot point
lwd = 2,             # set the line width
xlim = c(0,60),      # change limits of x-axis
ylim = c(0,50))      # change the limits of y-axis
abline(model) # add best fit line
getwd()
knitr::opts_chunk$set(echo = TRUE, eval = F)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE, eval = F)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE, eval = F)
install.packages("dplyr")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
datapay <- read.csv("MLPayData_Total.csv", header=T, as.is=F)
# You can also use the whole path to read in the data. In my case,
# datapay <- read.csv("/Users/lzhao/Dropbox/STAT471/Data/MLPayData_Total.csv", header=T, as.is=F)
getwd()
class(datapay)
str(datapay) # make sure the variables are correctly defined.
summary(datapay) # a quick summary of each variable
plot(datapay$payroll, datapay$avgwin,
pch  = 16,
cex  = 0.8,
col  = "blue",
xlab = "Payroll",
ylab = "Win Percentage",
main = "MLB Teams's Overall Win Percentage vs. Payroll")
text(datapay$payroll, datapay$avgwin, labels=datapay$team, cex=0.7, pos=1) # label all points
ggplot(datapay) +
geom_point(aes(x = payroll, y = avgwin), color = "blue") +
geom_text(aes(x = payroll, y = avgwin, label=team)) +
labs(title = "MLB Teams's Overall Win Percentage vs. Payroll", x = "Payroll", y = "Win Percentage")
datapay %>% select(team,payroll) %>% filter(payroll == max(payroll))
View(datapay)
head(datapay) # or tail(datapay)
head(datapay, 2) # first two rows
dim(datapay)
names(datapay)
datapay[1, 1]
datapay[1, "payroll"]
datapay$payroll # base R
datapay %>% select(payroll) # dplyr
datapay[, 1] # Base R
datapay %>% select(1) #DPLYR
datapay[, c(1:3)] # first three columns
datapay %>% select(1:3) #DPLYR
datapay %>% select(payroll:Team.name.2014) #DPLYR
datapay <- datapay %>% rename(team = Team.name.2014 ) # dplyr
names(datapay)[3] <- "team" # Base R
sum(is.na(datapay))
datapay %>%
filter(!complete.cases(.)) %>% summarize(n())
sapply(datapay, function(x) sum(is.na(x)))
data1 <- datapay[, -(21:37)] # take X1998 to X2014 out
data2 <- data1[, sort(names(data1))] # sort colnames
data2.1 <- data1[, order(names(data1))] # alternative way
names(data2)
names(data2.1)
data1 <- datapay %>% select(-21:-37)
data2 <- data1 %>% select(order(names(data1)))
names(data2)
myfit0 <- lm(avgwin ~ payroll, data=datapay)
names(myfit0)
summary(myfit0)   # it is another object that is often used
results <- summary(myfit0)
names(results)
plot(datapay$payroll, datapay$avgwin,
pch  = 16,
xlab = "Payroll",
ylab = "Win Percentage",
main = "MLB Teams's Overall Win Percentage vs. Payroll")
abline(myfit0, col="red", lwd=4)         # many other ways.
abline(h=mean(datapay$avgwin), lwd=5, col="blue") # add a horizontal line, y=mean(y)
ggplot(datapay, aes(x = payroll, y = avgwin)) +
geom_point() +
geom_smooth(method="lm", se = F,color = "red") +
geom_hline(aes(yintercept = mean(avgwin)), color = "blue") +
annotate(geom="text", x=0.8409340, y=0.5445067, label="Oakland A's",color="green", vjust = -1) +
annotate(geom="text", x=1.9723587, y=0.5487172, label="Red Sox",color="red", vjust = -1)
myfit0 <- lm(avgwin~payroll, data=datapay)
RSS <- sum((myfit0$res)^2) # residual sum of squares
RSS
sqrt(RSS/myfit0$df)
summary(myfit0)$sigma
